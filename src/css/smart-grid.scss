$columns: 12;
$atom: (100% / $columns);

$break_lgMax: 1340px;
$break_lg: 1080px;
$break_lgMin: 1024px;
$break_md: 980px;
$break_sm: 860px;
$break_smMin: 790px;
$break_xs: 660px;
$break_mobileLg: 480px;
$break_mobileMd: 430px;
$break_mobileMdMin: 400px;
$break_mobileS: 320px;

$offset: 30px;
$offset_lgMax: $offset;
$offset_lg: $offset;
$offset_lgMin: $offset;
$offset_md: $offset;
$offset_sm: $offset;
$offset_smMin: $offset;
$offset_xs: $offset;
$offset_mobileLg: $offset;
$offset_mobileMd: $offset;
$offset_mobileMdMin: $offset;
$offset_mobileS: $offset;

$offset_one_side: ($offset / 2);
$offset_lgMax_one_side: ($offset_lgMax / 2);
$offset_lg_one_side: ($offset_lg / 2);
$offset_lgMin_one_side: ($offset_lgMin / 2);
$offset_md_one_side: ($offset_md / 2);
$offset_sm_one_side: ($offset_sm / 2);
$offset_smMin_one_side: ($offset_smMin / 2);
$offset_xs_one_side: ($offset_xs / 2);
$offset_mobileLg_one_side: ($offset_mobileLg / 2);
$offset_mobileMd_one_side: ($offset_mobileMd / 2);
$offset_mobileMdMin_one_side: ($offset_mobileMdMin / 2);
$offset_mobileS_one_side: ($offset_mobileS / 2);

$fields: 30px;
$fields_mobileLg: 15px;
$fields_mobileMd: 15px;
$fields_mobileMdMin: 15px;
$fields_mobileS: 15px;

@mixin wrapper-full(){
    padding-left: $fields;
    padding-right: $fields;

    @include mobileLg-block(){
        padding-left: $fields_mobileLg;
        padding-right: $fields_mobileLg;
    }

    @include mobileMd-block(){
        padding-left: $fields_mobileMd;
        padding-right: $fields_mobileMd;
    }

    @include mobileMdMin-block(){
        padding-left: $fields_mobileMdMin;
        padding-right: $fields_mobileMdMin;
    }

    @include mobileS-block(){
        padding-left: $fields_mobileS;
        padding-right: $fields_mobileS;
    }
}

@mixin row-offsets(){
    margin-left: ($offset_one_side * -1);
    margin-right: ($offset_one_side * -1);
}

@mixin col-offsets($type){
    #{$type}-left: $offset_one_side;
    #{$type}-right: $offset_one_side;
}

@mixin wrapper(){
    max-width: 1180px;
    margin: 0 auto;
    @include wrapper-full();
}

@mixin row-flex(){
    display: flex;
    flex-wrap: wrap;
    @include row-offsets();
}

@mixin row-float(){
    @include row-offsets();
    @include clearfix();
}

@mixin row-ib(){
    @include row-offsets();
}

@mixin col(){
    box-sizing: border-box;
    word-wrap: break-word;
    @include col-offsets(margin);
}

@mixin col-float(){
    float: left;
}

@mixin col-ib(){
    display: inline-block;
    vertical-align: top;
}

@mixin col-padding(){
    word-wrap: break-word;
    @include col-offsets(padding);
}

@mixin size($n){
    $val: 100% / $columns * $n;
    width: #{calc(#{$val} - #{$offset})};
}

@mixin size-lgMax($n){
    $val: 100% / $columns * $n;
    @include lgMax(width, #{calc(#{$val} - #{$offset_lgMax})});
}

@mixin size-lg($n){
    $val: 100% / $columns * $n;
    @include lg(width, #{calc(#{$val} - #{$offset_lg})});
}

@mixin size-lgMin($n){
    $val: 100% / $columns * $n;
    @include lgMin(width, #{calc(#{$val} - #{$offset_lgMin})});
}

@mixin size-md($n){
    $val: 100% / $columns * $n;
    @include md(width, #{calc(#{$val} - #{$offset_md})});
}

@mixin size-sm($n){
    $val: 100% / $columns * $n;
    @include sm(width, #{calc(#{$val} - #{$offset_sm})});
}

@mixin size-smMin($n){
    $val: 100% / $columns * $n;
    @include smMin(width, #{calc(#{$val} - #{$offset_smMin})});
}

@mixin size-xs($n){
    $val: 100% / $columns * $n;
    @include xs(width, #{calc(#{$val} - #{$offset_xs})});
}

@mixin size-mobileLg($n){
    $val: 100% / $columns * $n;
    @include mobileLg(width, #{calc(#{$val} - #{$offset_mobileLg})});
}

@mixin size-mobileMd($n){
    $val: 100% / $columns * $n;
    @include mobileMd(width, #{calc(#{$val} - #{$offset_mobileMd})});
}

@mixin size-mobileMdMin($n){
    $val: 100% / $columns * $n;
    @include mobileMdMin(width, #{calc(#{$val} - #{$offset_mobileMdMin})});
}

@mixin size-mobileS($n){
    $val: 100% / $columns * $n;
    @include mobileS(width, #{calc(#{$val} - #{$offset_mobileS})});
}

@mixin shift($n){
    $val: 100% / $columns * $n;
    margin-left: #{calc(#{$val} + #{$offset_one_side})};
    margin-right: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-left($n){
    $val: 100% / $columns * $n;
    margin-left: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-right($n){
    $val: 100% / $columns * $n;
    margin-right: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-padding($n){
    $val: 100% / $columns * $n;
    padding-left: #{calc(#{$val} + #{$offset_one_side})};
    padding-right: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-padding-left($n){
    $val: 100% / $columns * $n;
    padding-left: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-padding-right($n){
    $val: 100% / $columns * $n;
    padding-right: #{calc(#{$val} + #{$offset_one_side})};
}

@mixin shift-lgMax($n){
    $val: 100% / $columns * $n;
    @include lgMax(margin-left, #{calc(#{$val} + #{$offset_lgMax_one_side})});
    @include lgMax(margin-right, #{calc(#{$val} + #{$offset_lgMax_one_side})});
}

@mixin shift-lgMax-left($n){
    $val: 100% / $columns * $n;
    @include lgMax(margin-left, #{calc(#{$val} + #{$offset_lgMax_one_side})});
}

@mixin shift-lgMax-right($n){
    $val: 100% / $columns * $n;
    @include lgMax(margin-right, #{calc(#{$val} + #{$offset_lgMax_one_side})});
}

@mixin shift-lgMax-padding($n){
    $val: 100% / $columns * $n;
    @include lgMax(padding-left, #{calc(#{$val} + #{$offset_lgMax_one_side})});
    @include lgMax(padding-right, #{calc(#{$val} + #{$offset_lgMax_one_side})});
}

@mixin shift-lgMax-padding-left($n){
    $val: 100% / $columns * $n;
    @include lgMax(padding-left, #{calc(#{$val} + #{$offset_lgMax_one_side})});
}

@mixin shift-lgMax-padding-right($n){
    $val: 100% / $columns * $n;
    @include lgMax(padding-right, #{calc(#{$val} + #{$offset_lgMax_one_side})});
}

@mixin shift-lg($n){
    $val: 100% / $columns * $n;
    @include lg(margin-left, #{calc(#{$val} + #{$offset_lg_one_side})});
    @include lg(margin-right, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-left($n){
    $val: 100% / $columns * $n;
    @include lg(margin-left, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-right($n){
    $val: 100% / $columns * $n;
    @include lg(margin-right, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-padding($n){
    $val: 100% / $columns * $n;
    @include lg(padding-left, #{calc(#{$val} + #{$offset_lg_one_side})});
    @include lg(padding-right, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-padding-left($n){
    $val: 100% / $columns * $n;
    @include lg(padding-left, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lg-padding-right($n){
    $val: 100% / $columns * $n;
    @include lg(padding-right, #{calc(#{$val} + #{$offset_lg_one_side})});
}

@mixin shift-lgMin($n){
    $val: 100% / $columns * $n;
    @include lgMin(margin-left, #{calc(#{$val} + #{$offset_lgMin_one_side})});
    @include lgMin(margin-right, #{calc(#{$val} + #{$offset_lgMin_one_side})});
}

@mixin shift-lgMin-left($n){
    $val: 100% / $columns * $n;
    @include lgMin(margin-left, #{calc(#{$val} + #{$offset_lgMin_one_side})});
}

@mixin shift-lgMin-right($n){
    $val: 100% / $columns * $n;
    @include lgMin(margin-right, #{calc(#{$val} + #{$offset_lgMin_one_side})});
}

@mixin shift-lgMin-padding($n){
    $val: 100% / $columns * $n;
    @include lgMin(padding-left, #{calc(#{$val} + #{$offset_lgMin_one_side})});
    @include lgMin(padding-right, #{calc(#{$val} + #{$offset_lgMin_one_side})});
}

@mixin shift-lgMin-padding-left($n){
    $val: 100% / $columns * $n;
    @include lgMin(padding-left, #{calc(#{$val} + #{$offset_lgMin_one_side})});
}

@mixin shift-lgMin-padding-right($n){
    $val: 100% / $columns * $n;
    @include lgMin(padding-right, #{calc(#{$val} + #{$offset_lgMin_one_side})});
}

@mixin shift-md($n){
    $val: 100% / $columns * $n;
    @include md(margin-left, #{calc(#{$val} + #{$offset_md_one_side})});
    @include md(margin-right, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-left($n){
    $val: 100% / $columns * $n;
    @include md(margin-left, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-right($n){
    $val: 100% / $columns * $n;
    @include md(margin-right, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-padding($n){
    $val: 100% / $columns * $n;
    @include md(padding-left, #{calc(#{$val} + #{$offset_md_one_side})});
    @include md(padding-right, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-padding-left($n){
    $val: 100% / $columns * $n;
    @include md(padding-left, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-md-padding-right($n){
    $val: 100% / $columns * $n;
    @include md(padding-right, #{calc(#{$val} + #{$offset_md_one_side})});
}

@mixin shift-sm($n){
    $val: 100% / $columns * $n;
    @include sm(margin-left, #{calc(#{$val} + #{$offset_sm_one_side})});
    @include sm(margin-right, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-left($n){
    $val: 100% / $columns * $n;
    @include sm(margin-left, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-right($n){
    $val: 100% / $columns * $n;
    @include sm(margin-right, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-padding($n){
    $val: 100% / $columns * $n;
    @include sm(padding-left, #{calc(#{$val} + #{$offset_sm_one_side})});
    @include sm(padding-right, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-padding-left($n){
    $val: 100% / $columns * $n;
    @include sm(padding-left, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-sm-padding-right($n){
    $val: 100% / $columns * $n;
    @include sm(padding-right, #{calc(#{$val} + #{$offset_sm_one_side})});
}

@mixin shift-smMin($n){
    $val: 100% / $columns * $n;
    @include smMin(margin-left, #{calc(#{$val} + #{$offset_smMin_one_side})});
    @include smMin(margin-right, #{calc(#{$val} + #{$offset_smMin_one_side})});
}

@mixin shift-smMin-left($n){
    $val: 100% / $columns * $n;
    @include smMin(margin-left, #{calc(#{$val} + #{$offset_smMin_one_side})});
}

@mixin shift-smMin-right($n){
    $val: 100% / $columns * $n;
    @include smMin(margin-right, #{calc(#{$val} + #{$offset_smMin_one_side})});
}

@mixin shift-smMin-padding($n){
    $val: 100% / $columns * $n;
    @include smMin(padding-left, #{calc(#{$val} + #{$offset_smMin_one_side})});
    @include smMin(padding-right, #{calc(#{$val} + #{$offset_smMin_one_side})});
}

@mixin shift-smMin-padding-left($n){
    $val: 100% / $columns * $n;
    @include smMin(padding-left, #{calc(#{$val} + #{$offset_smMin_one_side})});
}

@mixin shift-smMin-padding-right($n){
    $val: 100% / $columns * $n;
    @include smMin(padding-right, #{calc(#{$val} + #{$offset_smMin_one_side})});
}

@mixin shift-xs($n){
    $val: 100% / $columns * $n;
    @include xs(margin-left, #{calc(#{$val} + #{$offset_xs_one_side})});
    @include xs(margin-right, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-left($n){
    $val: 100% / $columns * $n;
    @include xs(margin-left, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-right($n){
    $val: 100% / $columns * $n;
    @include xs(margin-right, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-padding($n){
    $val: 100% / $columns * $n;
    @include xs(padding-left, #{calc(#{$val} + #{$offset_xs_one_side})});
    @include xs(padding-right, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-padding-left($n){
    $val: 100% / $columns * $n;
    @include xs(padding-left, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-xs-padding-right($n){
    $val: 100% / $columns * $n;
    @include xs(padding-right, #{calc(#{$val} + #{$offset_xs_one_side})});
}

@mixin shift-mobileLg($n){
    $val: 100% / $columns * $n;
    @include mobileLg(margin-left, #{calc(#{$val} + #{$offset_mobileLg_one_side})});
    @include mobileLg(margin-right, #{calc(#{$val} + #{$offset_mobileLg_one_side})});
}

@mixin shift-mobileLg-left($n){
    $val: 100% / $columns * $n;
    @include mobileLg(margin-left, #{calc(#{$val} + #{$offset_mobileLg_one_side})});
}

@mixin shift-mobileLg-right($n){
    $val: 100% / $columns * $n;
    @include mobileLg(margin-right, #{calc(#{$val} + #{$offset_mobileLg_one_side})});
}

@mixin shift-mobileLg-padding($n){
    $val: 100% / $columns * $n;
    @include mobileLg(padding-left, #{calc(#{$val} + #{$offset_mobileLg_one_side})});
    @include mobileLg(padding-right, #{calc(#{$val} + #{$offset_mobileLg_one_side})});
}

@mixin shift-mobileLg-padding-left($n){
    $val: 100% / $columns * $n;
    @include mobileLg(padding-left, #{calc(#{$val} + #{$offset_mobileLg_one_side})});
}

@mixin shift-mobileLg-padding-right($n){
    $val: 100% / $columns * $n;
    @include mobileLg(padding-right, #{calc(#{$val} + #{$offset_mobileLg_one_side})});
}

@mixin shift-mobileMd($n){
    $val: 100% / $columns * $n;
    @include mobileMd(margin-left, #{calc(#{$val} + #{$offset_mobileMd_one_side})});
    @include mobileMd(margin-right, #{calc(#{$val} + #{$offset_mobileMd_one_side})});
}

@mixin shift-mobileMd-left($n){
    $val: 100% / $columns * $n;
    @include mobileMd(margin-left, #{calc(#{$val} + #{$offset_mobileMd_one_side})});
}

@mixin shift-mobileMd-right($n){
    $val: 100% / $columns * $n;
    @include mobileMd(margin-right, #{calc(#{$val} + #{$offset_mobileMd_one_side})});
}

@mixin shift-mobileMd-padding($n){
    $val: 100% / $columns * $n;
    @include mobileMd(padding-left, #{calc(#{$val} + #{$offset_mobileMd_one_side})});
    @include mobileMd(padding-right, #{calc(#{$val} + #{$offset_mobileMd_one_side})});
}

@mixin shift-mobileMd-padding-left($n){
    $val: 100% / $columns * $n;
    @include mobileMd(padding-left, #{calc(#{$val} + #{$offset_mobileMd_one_side})});
}

@mixin shift-mobileMd-padding-right($n){
    $val: 100% / $columns * $n;
    @include mobileMd(padding-right, #{calc(#{$val} + #{$offset_mobileMd_one_side})});
}

@mixin shift-mobileMdMin($n){
    $val: 100% / $columns * $n;
    @include mobileMdMin(margin-left, #{calc(#{$val} + #{$offset_mobileMdMin_one_side})});
    @include mobileMdMin(margin-right, #{calc(#{$val} + #{$offset_mobileMdMin_one_side})});
}

@mixin shift-mobileMdMin-left($n){
    $val: 100% / $columns * $n;
    @include mobileMdMin(margin-left, #{calc(#{$val} + #{$offset_mobileMdMin_one_side})});
}

@mixin shift-mobileMdMin-right($n){
    $val: 100% / $columns * $n;
    @include mobileMdMin(margin-right, #{calc(#{$val} + #{$offset_mobileMdMin_one_side})});
}

@mixin shift-mobileMdMin-padding($n){
    $val: 100% / $columns * $n;
    @include mobileMdMin(padding-left, #{calc(#{$val} + #{$offset_mobileMdMin_one_side})});
    @include mobileMdMin(padding-right, #{calc(#{$val} + #{$offset_mobileMdMin_one_side})});
}

@mixin shift-mobileMdMin-padding-left($n){
    $val: 100% / $columns * $n;
    @include mobileMdMin(padding-left, #{calc(#{$val} + #{$offset_mobileMdMin_one_side})});
}

@mixin shift-mobileMdMin-padding-right($n){
    $val: 100% / $columns * $n;
    @include mobileMdMin(padding-right, #{calc(#{$val} + #{$offset_mobileMdMin_one_side})});
}

@mixin shift-mobileS($n){
    $val: 100% / $columns * $n;
    @include mobileS(margin-left, #{calc(#{$val} + #{$offset_mobileS_one_side})});
    @include mobileS(margin-right, #{calc(#{$val} + #{$offset_mobileS_one_side})});
}

@mixin shift-mobileS-left($n){
    $val: 100% / $columns * $n;
    @include mobileS(margin-left, #{calc(#{$val} + #{$offset_mobileS_one_side})});
}

@mixin shift-mobileS-right($n){
    $val: 100% / $columns * $n;
    @include mobileS(margin-right, #{calc(#{$val} + #{$offset_mobileS_one_side})});
}

@mixin shift-mobileS-padding($n){
    $val: 100% / $columns * $n;
    @include mobileS(padding-left, #{calc(#{$val} + #{$offset_mobileS_one_side})});
    @include mobileS(padding-right, #{calc(#{$val} + #{$offset_mobileS_one_side})});
}

@mixin shift-mobileS-padding-left($n){
    $val: 100% / $columns * $n;
    @include mobileS(padding-left, #{calc(#{$val} + #{$offset_mobileS_one_side})});
}

@mixin shift-mobileS-padding-right($n){
    $val: 100% / $columns * $n;
    @include mobileS(padding-right, #{calc(#{$val} + #{$offset_mobileS_one_side})});
}

@mixin lgMax($name, $value){
    @media screen and (max-width: $break_lgMax){
        #{$name}: $value;
    }
}

@mixin lgMax-block(){
    @media screen and (max-width: $break_lgMax){
        @content;
    }
}

@mixin lg($name, $value){
    @media screen and (max-width: $break_lg){
        #{$name}: $value;
    }
}

@mixin lg-block(){
    @media screen and (max-width: $break_lg){
        @content;
    }
}

@mixin lgMin($name, $value){
    @media screen and (max-width: $break_lgMin){
        #{$name}: $value;
    }
}

@mixin lgMin-block(){
    @media screen and (max-width: $break_lgMin){
        @content;
    }
}

@mixin md($name, $value){
    @media screen and (max-width: $break_md){
        #{$name}: $value;
    }
}

@mixin md-block(){
    @media screen and (max-width: $break_md){
        @content;
    }
}

@mixin sm($name, $value){
    @media screen and (max-width: $break_sm){
        #{$name}: $value;
    }
}

@mixin sm-block(){
    @media screen and (max-width: $break_sm){
        @content;
    }
}

@mixin smMin($name, $value){
    @media screen and (max-width: $break_smMin){
        #{$name}: $value;
    }
}

@mixin smMin-block(){
    @media screen and (max-width: $break_smMin){
        @content;
    }
}

@mixin xs($name, $value){
    @media screen and (max-width: $break_xs){
        #{$name}: $value;
    }
}

@mixin xs-block(){
    @media screen and (max-width: $break_xs){
        @content;
    }
}

@mixin mobileLg($name, $value){
    @media screen and (max-width: $break_mobileLg){
        #{$name}: $value;
    }
}

@mixin mobileLg-block(){
    @media screen and (max-width: $break_mobileLg){
        @content;
    }
}

@mixin mobileMd($name, $value){
    @media screen and (max-width: $break_mobileMd){
        #{$name}: $value;
    }
}

@mixin mobileMd-block(){
    @media screen and (max-width: $break_mobileMd){
        @content;
    }
}

@mixin mobileMdMin($name, $value){
    @media screen and (max-width: $break_mobileMdMin){
        #{$name}: $value;
    }
}

@mixin mobileMdMin-block(){
    @media screen and (max-width: $break_mobileMdMin){
        @content;
    }
}

@mixin mobileS($name, $value){
    @media screen and (max-width: $break_mobileS){
        #{$name}: $value;
    }
}

@mixin mobileS-block(){
    @media screen and (max-width: $break_mobileS){
        @content;
    }
}

@mixin from($min_width){
    @media screen and (min-width: $min_width){
        @content;
    }
}

@mixin to($max_width){
    @media screen and (max-width: $max_width){
        @content;
    }
}

@mixin from-to($min_width, $max_width){
    @media screen and (min-width: $min_width) and (max-width: $max_width){
        @content;
    }
}

@mixin u-row-flex($offset){
    display: flex;
    flex-wrap: wrap;
    margin-left: ($offset / -2);
    margin-right: ($offset / -2);
}

@mixin u-col($offset){
    box-sizing: border-box;
    word-wrap: break-word;
    margin-left: ($offset / 2);
    margin-right: ($offset / 2);
}

@mixin u-size($n, $columns, $offset){
    width: #{calc(100% / #{$columns} * #{$n} - #{$offset})};
}

@mixin reset(){
    body,div,dl,dt,dd,ul,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,input,textarea,p,blockquote,th,td{
        margin: 0;
        padding: 0;
    }
    table{
        border-collapse: collapse;
        border-spacing: 0;
    }
    fieldset,img,abbr{
        border: 0;
    }
    address,caption,cite,code,dfn,em,strong,th,var{
        font-style: normal;
        font-weight: normal;
    }
    ul li{
        list-style: none;
    }
    caption,th{
        text-align: left;
    }
    h1,h2,h3,h4,h5,h6{
        font-size: 100%;
        font-weight: normal;
    }
    sup{
        vertical-align: text-top;
    }
    sub{
        vertical-align: text-bottom;
    }
    input,textarea,select{
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
    }
    legend{
        color: #000;
    }
    article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section,main{
        display: block;
    }
    img{
        max-width: 100%;
        height: auto;
    }
}

@mixin debug($background, $outline){
    height: 100vh;
    position: fixed;
    width: 100%;
    
    > div{
        height: inherit;
        @include wrapper();
        
        > div{
            height: inherit;
            @include row-flex();
            
            > div{
                @include col();
                @include size(1);
                height: inherit;
                outline: $outline;
                background: $background;
            }
        }
    }
}

@mixin clearfix(){
    &::after{
        display: block;
        content: "";
        clear: both;
    }
}